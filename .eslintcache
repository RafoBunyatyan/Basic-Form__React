[{"C:\\Users\\Help-Mobile\\Desktop\\Rafo\\React-BasicForm\\src\\index.js":"1","C:\\Users\\Help-Mobile\\Desktop\\Rafo\\React-BasicForm\\src\\App.js":"2","C:\\Users\\Help-Mobile\\Desktop\\Rafo\\React-BasicForm\\src\\components\\SimpleInput.js":"3","C:\\Users\\Help-Mobile\\Desktop\\Rafo\\React-BasicForm\\src\\hooks\\use-input.js":"4","C:\\Users\\Help-Mobile\\Desktop\\Rafo\\React-BasicForm\\src\\components\\BasicForm.js":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":153,"mtime":1655144754393,"results":"8","hashOfConfig":"7"},{"size":2016,"mtime":1655144290833,"results":"9","hashOfConfig":"7"},{"size":679,"mtime":1655143786501,"results":"10","hashOfConfig":"7"},{"size":2687,"mtime":1655146696596,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1wh6v9f",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Help-Mobile\\Desktop\\Rafo\\React-BasicForm\\src\\index.js",[],["24","25"],"C:\\Users\\Help-Mobile\\Desktop\\Rafo\\React-BasicForm\\src\\App.js",[],"C:\\Users\\Help-Mobile\\Desktop\\Rafo\\React-BasicForm\\src\\components\\SimpleInput.js",[],"C:\\Users\\Help-Mobile\\Desktop\\Rafo\\React-BasicForm\\src\\hooks\\use-input.js",["26"],"import React, { useState } from \"react\"\r\n\r\nconst useInput = (validateValue) => {\r\n\tconst [enteredValue, setEnteredValue] = useState('')\r\n\tconst [isTouched, setIsTouched] = useState(false)\r\n\r\n\tconst valueIsValid = validateValue(enteredValue)\r\n\tconst hasError = !valueIsValid && isTouched\r\n\r\n\tconst valueChangeHandler = event => {\r\n\t\tsetEnteredValue(event.target.value)\r\n\t}\r\n\r\n\tconst inputBlurHandler = event => {\r\n\t\tsetIsTouched(true)\r\n\t}\r\n\r\n\tconst reset = () => {\r\n\t\tsetEnteredValue('')\r\n\t\tsetIsTouched(false)\r\n\t}\r\n\r\n\treturn {\r\n\t\tvalue: enteredValue,\r\n\t\tisValid: valueIsValid,\r\n\t\thasError,\r\n\t\tvalueChangeHandler,\r\n\t\tinputBlurHandler,\r\n\t\treset,\r\n\t}\r\n}\r\n\r\nexport default useInput\r\n","C:\\Users\\Help-Mobile\\Desktop\\Rafo\\React-BasicForm\\src\\components\\BasicForm.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":13},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]